import React from "react";
import {
  Modal,
  View,
  Text,
  Image,
  TouchableOpacity,
  StyleSheet,
  ScrollView,
  Dimensions,
} from "react-native";
import { FontAwesome } from "@expo/vector-icons";

interface Libro {
  id: number;
  nombre: string;
  autor: string;
  categor√≠a: string;
  idioma_original: string;
  a√±o_publicaci√≥n: number;
  imagen_portada: string;
}

interface BookDetailModalProps {
  libro: Libro | null;
  visible: boolean;
  onClose: () => void;
}

const { width, height } = Dimensions.get("window");

export default function BookDetailModal({
  libro,
  visible,
  onClose,
}: BookDetailModalProps) {
  if (!libro) return null;

  // Funci√≥n para obtener la imagen seg√∫n el ID del libro
  const getImageSource = (id: number) => {
    switch (id) {
      case 1:
        return require("../assets/images/portadas/breves-respuestas-a-las-grandes-preguntas.png");
      case 2:
        return require("../assets/images/portadas/el-gen-una-historia-intima.png");
      case 3:
        return require("../assets/images/portadas/una-breve-historia-del-tiempo.png");
      case 4:
        return require("../assets/images/portadas/el-origen-de-las-especies.png");
      case 5:
        return require("../assets/images/portadas/cosmos.png");
      case 6:
        return require("../assets/images/portadas/clean-code.png");
      case 7:
        return require("../assets/images/portadas/you-dont-know-js.png");
      case 8:
        return require("../assets/images/portadas/introduction-to-the-theory-of-computation.png");
      case 9:
        return require("../assets/images/portadas/structure-and-interpretation-of-computer-programs.png");
      case 10:
        return require("../assets/images/portadas/the-pragmatic-programmer.png");
      case 11:
        return require("../assets/images/portadas/sapiens-de-animales-a-dioses.png");
      case 12:
        return require("../assets/images/portadas/guns-germs-and-steel.png");
      case 13:
        return require("../assets/images/portadas/postguerra-una-historia-de-europa-desde-1945.png");
      case 14:
        return require("../assets/images/portadas/la-historia-del-siglo-xx.png");
      case 15:
        return require("../assets/images/portadas/la-segunda-guerra-mundial.png");
      default:
        return null;
    }
  };

  // Funci√≥n para obtener descripci√≥n personalizada por libro
  const getBookDescription = (id: number) => {
    const descriptions = {
      1: "Una fascinante exploraci√≥n de las preguntas m√°s fundamentales del universo, presentada de manera accesible por uno de los f√≠sicos m√°s brillantes de nuestro tiempo. Hawking aborda temas como la existencia de Dios, la posibilidad de viajar en el tiempo y el futuro de la humanidad.",
      2: "Una historia √©pica del gen, desde su descubrimiento hasta las implicaciones futuras de la ingenier√≠a gen√©tica. Mukherjee combina ciencia rigurosa con narrativa cautivadora para explorar c√≥mo los genes moldean nuestras vidas.",
      3: "El libro que hizo accesible la cosmolog√≠a al p√∫blico general. Hawking explica conceptos complejos como los agujeros negros, el Big Bang y la relatividad de manera comprensible y fascinante.",
      4: "La obra revolucionaria que cambi√≥ nuestra comprensi√≥n de la vida en la Tierra. Darwin presenta su teor√≠a de la evoluci√≥n por selecci√≥n natural, fundamentando la biolog√≠a moderna.",
      5: "Un viaje √©pico a trav√©s del cosmos que combina ciencia rigurosa con poes√≠a. Sagan nos gu√≠a desde las part√≠culas subat√≥micas hasta las galaxias m√°s distantes, explorando nuestro lugar en el universo.",
      6: "La gu√≠a definitiva para escribir c√≥digo limpio y mantenible. Martin presenta principios fundamentales y t√©cnicas pr√°cticas para crear software de calidad profesional.",
      7: "Una serie profunda que explora los aspectos m√°s confusos y malentendidos de JavaScript. Simpson desmitifica el lenguaje y revela sus caracter√≠sticas m√°s poderosas.",
      8: "Una introducci√≥n rigurosa a la teor√≠a de la computaci√≥n que abarca aut√≥matas, computabilidad y complejidad. Esencial para entender los fundamentos te√≥ricos de la inform√°tica.",
      9: "Un cl√°sico de la programaci√≥n que ense√±a a pensar como un cient√≠fico de la computaci√≥n. Utiliza Scheme para explorar conceptos fundamentales de la programaci√≥n y la abstracci√≥n.",
      10: "Consejos pr√°cticos y filosof√≠a de desarrollo de dos programadores experimentados. Hunt y Thomas comparten t√©cnicas para convertirse en un programador m√°s efectivo y profesional.",
      11: "Una narrativa brillante de la historia humana desde cazadores-recolectores hasta la era moderna. Harari examina c√≥mo Homo sapiens lleg√≥ a dominar el planeta.",
      12: "Una explicaci√≥n innovadora de por qu√© algunas sociedades prosperaron mientras otras no. Diamond examina el papel de la geograf√≠a, la tecnolog√≠a y los pat√≥genos en el desarrollo humano.",
      13: "Una historia magistral de Europa desde el final de la Segunda Guerra Mundial. Judt analiza la reconstrucci√≥n, la Guerra Fr√≠a y la transformaci√≥n del continente europeo.",
      14: "Un an√°lisis penetrante del siglo XX como la 'Era de los Extremos'. Hobsbawm examina las revoluciones, guerras y transformaciones que definieron el siglo pasado.",
      15: "Una narrativa √©pica y accesible del conflicto m√°s devastador de la historia humana. Beevor combina estrategia militar con historias humanas para crear un relato completo de la guerra.",
    };
    return (
      descriptions[id as keyof typeof descriptions] ||
      "Una obra fascinante que explora temas profundos y relevantes de su campo."
    );
  };

   const getCategoryColor = (categoria: string) => {
      switch (categoria.toLowerCase()) {
         case "ciencia":
         return "#98abee";
         case "tecnolog√≠a":
         return "#1d24ca";
         case "historia":
         return "#dda853";
         default:
         return "#98abee";
      }
   };

  const imagenSource = getImageSource(libro.id);

   return (
      <Modal
         animationType="slide"
         transparent={true}
         visible={visible}
         onRequestClose={onClose}
      >
         <View style={styles.modalOverlay}>
         <View style={styles.modalContainer}>
            {/* Header del modal */}
            <View style={styles.modalHeader}>
               <TouchableOpacity onPress={onClose} style={styles.closeButton}>
               <FontAwesome name="times" size={24} color="#f9e8c9" />
               </TouchableOpacity>
            </View>

            <ScrollView
               style={styles.modalContent}
               showsVerticalScrollIndicator={false}
            >
               {/* Imagen del libro */}
               <View style={styles.imageContainer}>
               {imagenSource ? (
                  <Image
                     source={imagenSource}
                     style={styles.bookImage}
                     resizeMode="cover"
                  />
               ) : (
                  <View style={styles.imagePlaceholder}>
                     <Text style={styles.imagePlaceholderText}>üìö</Text>
                  </View>
               )}
               </View>

               {/* Informaci√≥n del libro */}
               <View style={styles.bookInfo}>
               <Text style={styles.bookTitle}>{libro.nombre}</Text>
               <Text style={styles.bookAuthor}>por {libro.autor}</Text>

               <View style={styles.bookMeta}>
                  <View
                     style={[
                     styles.categoryBadge,
                     { backgroundColor: getCategoryColor(libro.categor√≠a) },
                     ]}
                  >
                     <Text style={styles.categoryText}>
                     {libro.categor√≠a.toUpperCase()}
                     </Text>
                  </View>
                  <Text style={styles.metaText}>
                     {libro.a√±o_publicaci√≥n} ‚Ä¢ {libro.idioma_original}
                  </Text>
               </View>

               <View style={styles.descriptionContainer}>
                  <Text style={styles.descriptionTitle}>Descripci√≥n</Text>
                  <Text style={styles.bookDescription}>
                     {getBookDescription(libro.id)}
                  </Text>
               </View>

               {/* Botones de acci√≥n */}
               <View style={styles.actionButtons}>
                  <TouchableOpacity style={styles.primaryButton}>
                     <FontAwesome
                     name="book"
                     size={18}
                     color="#f9e8c9"
                     style={styles.buttonIcon}
                     />
                     <Text style={styles.primaryButtonText}>Leer ahora</Text>
                  </TouchableOpacity>

                  <TouchableOpacity style={styles.secondaryButton}>
                     <FontAwesome
                     name="heart-o"
                     size={18}
                     color="#201658"
                     style={styles.buttonIcon}
                     />
                     <Text style={styles.secondaryButtonText}>Favoritos</Text>
                  </TouchableOpacity>
               </View>
               </View>
            </ScrollView>
         </View>
         </View>
      </Modal>
   );
}

const styles = StyleSheet.create({
   modalOverlay: {
      flex: 1,
      backgroundColor: "rgba(33, 31, 45, 0.46)",
      justifyContent: "flex-end",
   },
   modalContainer: {
      backgroundColor: "#f9e8c9",
      borderTopLeftRadius: 20,
      borderTopRightRadius: 20,
      maxHeight: height * 0.9,
      minHeight: height * 0.7,
   },
   modalHeader: {
      flexDirection: "row",
      justifyContent: "flex-end",
      paddingHorizontal: 20,
      paddingTop: 15,
      paddingBottom: 5,
      backgroundColor: "#201658",
      borderTopLeftRadius: 20,
      borderTopRightRadius: 20,
   },
   closeButton: {
      padding: 5,
   },
   modalContent: {
      flex: 1,
      paddingHorizontal: 20,
   },
   imageContainer: {
      alignItems: "center",
      marginVertical: 20,
   },
   bookImage: {
      width: width * 0.5,
      height: width * 0.7,
      borderRadius: 12,
      shadowColor: "#201658",
      shadowOffset: {
         width: 0,
         height: 4,
      },
      shadowOpacity: 0.3,
      shadowRadius: 6,
      elevation: 8,
   },
   imagePlaceholder: {
      width: width * 0.5,
      height: width * 0.7,
      backgroundColor: "#98abee",
      borderRadius: 12,
      justifyContent: "center",
      alignItems: "center",
   },
   imagePlaceholderText: {
      fontSize: 60,
   },
   bookInfo: {
      paddingBottom: 30,
   },
   bookTitle: {
      fontSize: 24,
      fontWeight: "bold",
      color: "#201658",
      textAlign: "center",
      marginBottom: 8,
      lineHeight: 30,
   },
   bookAuthor: {
      fontSize: 18,
      color: "#1d24ca",
      textAlign: "center",
      marginBottom: 20,
      fontStyle: "italic",
   },
   bookMeta: {
      alignItems: "center",
      marginBottom: 25,
   },
   categoryBadge: {
      paddingHorizontal: 16,
      paddingVertical: 6,
      borderRadius: 20,
      marginBottom: 10,
   },
   categoryText: {
      color: "#f9e8c9",
      fontSize: 12,
      fontWeight: "bold",
      letterSpacing: 1,
   },
   metaText: {
      fontSize: 14,
      color: "#201658",
      opacity: 0.7,
   },
   descriptionContainer: {
      marginBottom: 30,
   },
   descriptionTitle: {
      fontSize: 18,
      fontWeight: "600",
      color: "#201658",
      marginBottom: 12,
   },
   bookDescription: {
      fontSize: 16,
      color: "#201658",
      lineHeight: 24,
      textAlign: "justify",
   },
   actionButtons: {
      flexDirection: "row",
      gap: 12,
   },
   primaryButton: {
      flex: 1,
      backgroundColor: "#201658",
      flexDirection: "row",
      alignItems: "center",
      justifyContent: "center",
      paddingVertical: 14,
      borderRadius: 12,
   },
   secondaryButton: {
      flex: 1,
      backgroundColor: "transparent",
      flexDirection: "row",
      alignItems: "center",
      justifyContent: "center",
      paddingVertical: 14,
      borderRadius: 12,
      borderWidth: 2,
      borderColor: "#201658",
   },
   buttonIcon: {
      marginRight: 8,
   },
   primaryButtonText: {
      color: "#f9e8c9",
      fontSize: 16,
      fontWeight: "600",
   },
   secondaryButtonText: {
      color: "#201658",
      fontSize: 16,
      fontWeight: "600",
   },
   });
